digraph "template" {
LandingBucket [color=black, label="LandingBucket\n<AWS::S3::Bucket>", shape=ellipse, type="Resource"];
LandingBucketPolicy [color=black, label="LandingBucketPolicy\n<AWS::S3::BucketPolicy>", shape=ellipse, type="Resource"];
CuratedBucket [color=black, label="CuratedBucket\n<AWS::S3::Bucket>", shape=ellipse, type="Resource"];
CuratedBucketPolicy [color=black, label="CuratedBucketPolicy\n<AWS::S3::BucketPolicy>", shape=ellipse, type="Resource"];
DataIngestionTrigger [color=black, label="DataIngestionTrigger\n<AWS::Lambda::Function>", shape=ellipse, type="Resource"];
DataIngestionTriggerRole [color=black, label="DataIngestionTriggerRole\n<AWS::IAM::Role>", shape=ellipse, type="Resource"];
DataLakeOrchestrator [color=black, label="DataLakeOrchestrator\n<AWS::StepFunctions::StateMachine>", shape=ellipse, type="Resource"];
DataLakeOrchestratorRole [color=black, label="DataLakeOrchestratorRole\n<AWS::IAM::Role>", shape=ellipse, type="Resource"];
DataProcessingJob [color=black, label="DataProcessingJob\n<AWS::Glue::Job>", shape=ellipse, type="Resource"];
GlueJobRole [color=black, label="GlueJobRole\n<AWS::IAM::Role>", shape=ellipse, type="Resource"];
DataLakeCrawler [color=black, label="DataLakeCrawler\n<AWS::Glue::Crawler>", shape=ellipse, type="Resource"];
GlueCrawlerRole [color=black, label="GlueCrawlerRole\n<AWS::IAM::Role>", shape=ellipse, type="Resource"];
LakeFormationPermissions [color=black, label="LakeFormationPermissions\n<AWS::LakeFormation::Permissions>", shape=ellipse, type="Resource"];
LandingBucketPolicy -> LandingBucket  [color=black, key=0, label=Ref, source_paths="['Properties', 'Bucket']"];
LandingBucketPolicy -> LandingBucket  [color=black, key=1, label=Ref, source_paths="['Properties', 'PolicyDocument', 'Statement', 0, 'Resource']"];
CuratedBucketPolicy -> CuratedBucket  [color=black, key=0, label=Ref, source_paths="['Properties', 'Bucket']"];
CuratedBucketPolicy -> CuratedBucket  [color=black, key=1, label=Ref, source_paths="['Properties', 'PolicyDocument', 'Statement', 0, 'Resource']"];
DataIngestionTrigger -> DataIngestionTriggerRole  [color=black, key=0, label=GetAtt, source_paths="['Properties', 'Role']"];
DataIngestionTriggerRole -> LandingBucket  [color=black, key=0, label=Ref, source_paths="['Properties', 'Policies', 0, 'PolicyDocument', 'Statement', 0, 'Resource', 0]"];
DataLakeOrchestrator -> DataLakeOrchestratorRole  [color=black, key=0, label=GetAtt, source_paths="['Properties', 'RoleArn']"];
DataLakeOrchestrator -> DataLakeCrawler  [color=black, key=0, label=Ref, source_paths="['Properties', 'DefinitionString']"];
DataLakeOrchestrator -> DataProcessingJob  [color=black, key=0, label=Ref, source_paths="['Properties', 'DefinitionString']"];
DataProcessingJob -> LandingBucket  [color=black, key=0, label=Ref, source_paths="['Properties', 'DefaultArguments', '--landing_bucket']"];
DataProcessingJob -> CuratedBucket  [color=black, key=0, label=Ref, source_paths="['Properties', 'DefaultArguments', '--curated_bucket']"];
DataProcessingJob -> GlueJobRole  [color=black, key=0, label=GetAtt, source_paths="['Properties', 'Role']"];
GlueJobRole -> LandingBucket  [color=black, key=0, label=Ref, source_paths="['Properties', 'Policies', 0, 'PolicyDocument', 'Statement', 0, 'Resource', 0]"];
GlueJobRole -> CuratedBucket  [color=black, key=0, label=Ref, source_paths="['Properties', 'Policies', 0, 'PolicyDocument', 'Statement', 0, 'Resource', 1]"];
DataLakeCrawler -> GlueCrawlerRole  [color=black, key=0, label=GetAtt, source_paths="['Properties', 'Role']"];
DataLakeCrawler -> LandingBucket  [color=black, key=0, label=Ref, source_paths="['Properties', 'Targets', 'S3Targets', 0, 'Path']"];
GlueCrawlerRole -> LandingBucket  [color=black, key=0, label=Ref, source_paths="['Properties', 'Policies', 0, 'PolicyDocument', 'Statement', 0, 'Resource']"];
LakeFormationPermissions -> CuratedBucket  [color=black, key=0, label=Ref, source_paths="['Properties', 'Resource', 'DataLocationResource', 'S3Resource']"];
LakeFormationPermissions -> GlueJobRole  [color=black, key=0, label=GetAtt, source_paths="['Properties', 'DataLakePrincipal', 'DataLakePrincipalIdentifier']"];
}
